package templates

import (
	"fmt"
	"net/url"
	"strconv"
	"time"
)

// formatDate formats a time.Time into a readable string
func formatDate(t time.Time) string {
	return t.Format("January 2, 2006")
}

// formatSize formats a file size in bytes into a human-readable string
func formatSize(size int64) string {
	if size < 1024 {
		return fmt.Sprintf("%d B", size)
	}
	if size < 1024*1024 {
		return fmt.Sprintf("%.1f KB", float64(size)/1024)
	}
	if size < 1024*1024*1024 {
		return fmt.Sprintf("%.1f MB", float64(size)/(1024*1024))
	}
	return fmt.Sprintf("%.1f GB", float64(size)/(1024*1024*1024))
}

// buildPaginationURL builds a pagination URL
func buildPaginationURL(page int, query string) templ.SafeURL {
	return templ.SafeURL(buildPaginationURLString(page, query))
}

// buildPaginationURLString builds a pagination URL string
func buildPaginationURLString(page int, query string) string {
	if query == "" {
		return "/?page=" + strconv.Itoa(page)
	}
	return "/search?q=" + url.QueryEscape(query) + "&page=" + strconv.Itoa(page)
}
